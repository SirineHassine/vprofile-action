name: vprofile actions
on: workflow_dispatch
env:
  AWS_REGION: us-east-2
  ECR_REPOSITORY: vprofileactionsh
  EKS_CLUSTER: vprofile-eks

jobs: 
  Testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      
      - name: maven test
        run: mvn test

      - name: chekstyle
        run: mvn checkstyle:checkstyle

      - name: Set Java 11
        uses: actions/setup-java@v3
        with: 
          distribution: 'temurin'
          java-version: '11'

      # Setup soner scanner
      - name: Setup SonarQube
        uses: warchant/setup-sonar-scanner@v7

      # Run Sonar scanner
      - name: SonarQube scan
        run:  sonar-scanner -Dsonar.host.url=${{ secrets.SONAR_URL }} -Dsonar.login=${{ secrets.SONAR_TOKEN }} -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} -Dsonar.sources=src/ -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/ -Dsonar.junit.reportsPath=target/surefire-reports/ -Dsonar.jacoco.reportsPath=target/jacoco.exec -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
        #run:  sonar-scanner -Dsonar.host.url=https://sonarcloud.io/ -Dsonar.login=b87a1aa38227d73397ccf999671aece3a38544eb -Dsonar.organization=vprofile-org-actions -Dsonar.projectKey=vprofile-org-actions_vprofile-actions -Dsonar.sources=src/ -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/ -Dsonar.junit.reportsPath=target/surefire-reports/ -Dsonar.jacoco.reportsPath=target/jacoco.exec -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
        # Check the quality Gate status
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
          SONAR_HOST_URL: ${{secrets.SONAR_URL}}

  BUILD_AND_PUBLISH:
    needs: Testing
    runs-on: ubuntu-latest
    steps:
        - name: Code checkout
          uses: actions/checkout@v4


        - name: upload image to ECR
          uses: appleboy/docker-ecr-action@master
          with:
            access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
            secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            registry: ${{ secrets.REGISTRY }}
            repo: ${{ secrets.ECR_REGISTRY }}
            region: ${{ secrets.AWS_REGION}}
            tags: ${{ github.run_number }}
            daemon_off: false
            dockerfile: ./Dockerfile
            context: ./

